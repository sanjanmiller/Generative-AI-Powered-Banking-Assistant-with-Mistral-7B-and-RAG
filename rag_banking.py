# -*- coding: utf-8 -*-
"""RAG_Banking.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OPBSee_enlviF4Q6Xx84ETyK1Flt2z0a
"""

from google.colab import files

uploaded = files.upload()
pdf_files = list(uploaded.keys())
print(pdf_files)

!pip install PyPDF2

#Extract Text
import PyPDF2

def pdf_to_text(pdf_path):
    text = ""
    with open(pdf_path, "rb") as f:
        reader = PyPDF2.PdfReader(f)
        for page in reader.pages:
            page_text = page.extract_text()
            if page_text:
                text += page_text + "\n"
    return text

all_text = ""
for pdf in pdf_files:
    all_text += pdf_to_text(pdf)

print("Text extraction done!")
print(all_text[:500])

#Clean Text
def clean_text(text):
    text = text.replace("\n", " ").strip()
    text = " ".join(text.split())
    return text

cleaned_text = clean_text(all_text)
print("Text cleaning done!")

#Chunk Text
def chunk_text(text, chunk_size=400):
    words = text.split()
    chunks = []
    for i in range(0, len(words), chunk_size):
        chunks.append(" ".join(words[i:i+chunk_size]))
    return chunks

text_chunks = chunk_text(cleaned_text)
print(f"Number of chunks created: {len(text_chunks)}")
print(text_chunks[:2]) # preview first 2 chunks

from google.colab import drive
drive.mount('/content/drive')

persist_dir = "/content/drive/MyDrive/chroma_db"

!pip install chromadb
!pip install sentence-transformers

#Import Libraries and Initialize Embedding Model
import chromadb
from sentence_transformers import SentenceTransformer

# Initialize embedding model
embedder = SentenceTransformer('all-MiniLM-L6-v2')

# Helper function to embed text chunks
def embed_text(texts):
    return embedder.encode(texts).tolist()  # ChromaDB expects lists

# Initialize ChromaDB client
client = chromadb.PersistentClient(path=persist_dir)

# Create a collection for your banking FAQs
collection = client.get_or_create_collection(
    name="banking_faqs"
)

#Add Your Text Chunks to the Collection

# Create unique IDs for each chunk
ids = [str(i) for i in range(len(text_chunks))]

# Add chunks and embeddings to the collection
collection.add(
    ids=ids,
    documents=text_chunks,
    embeddings=embed_text(text_chunks)
)

print(f"Added {len(text_chunks)} chunks to ChromaDB collection.")

print(f"ChromaDB saved in Drive at {persist_dir}")

#Test Retrieval
query = "Minimum balance for savings account?"
query_embedding = embed_text([query])[0]

results = collection.query(
    query_embeddings=[query_embedding],
    n_results=3
)

for doc in results['documents'][0]:
    print(doc)
    print("------")

print("Number of documents in collection:", len(collection.get()['documents']))

import chromadb

# Load ChromaDB from the folder where you persisted it
persist_dir = "/content/drive/MyDrive/chroma_db"
client = chromadb.PersistentClient(path=persist_dir)

# Get the existing collection
collection = client.get_collection("banking_faqs")

# Check number of documents
print("Number of documents in collection:", len(collection.get()['documents']))

ids = [str(i) for i in range(len(text_chunks))]
collection.add(
    ids=ids,
    documents=text_chunks,
    embeddings=embed_text(text_chunks)
)

print("Chunks added and ChromaDB persisted!")

query = "Minimum balance for savings account?"
query_embedding = embed_text([query])[0]

results = collection.query(
    query_embeddings=[query_embedding],
    n_results=3
)

for doc in results['documents'][0]:
    print(doc)
    print("------")

print("Number of documents in collection:", len(collection.get()['documents']))

print("ChromaDB successfully saved to Drive at:", persist_dir)

query = "What is a certificate of deposit (CD)?"
query_embedding = embed_text([query])[0]

results = collection.query(
    query_embeddings=[query_embedding],
    n_results=3
)

for doc in results['documents'][0]:
    print(doc)
    print("------")